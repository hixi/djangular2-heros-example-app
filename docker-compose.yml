version: '2'
services:
  frontend:
#    image: <dockerhub>/<project-frontend>
    build:
      context: ./frontend
      dockerfile: Dockerfile
  backend:
#    image: <dockerhub>/<project-backend>
    build:
      context: ./backend
      dockerfile: Dockerfile
    # on production, do not use this, but something like gunicorn!
    command: ./manage.py runserver_plus 0.0.0.0:8000
    environment:
      - DATABASE_URL=postgres://postgres@database/example
      - DJANGO_SETTINGS_MODULE=heroes_example.settings
      - DATABASE_URL=postgres://postgres:postgres@database:5432/example
      - SECRET_KEY=set this to a secret value in production!!!
#      - SECRET_KEY= set this to a secret value in production!!!
      - DEBUG=True
      - STATIC_ROOT=/var/www/backend/static/
      - STATIC_URL=/api/static/
      - MEDIA_ROOT=/var/www/backend/media/
      - MEDIA_URL=/api/media/
    volumes:
      - backend-static:/var/www/backend/static
      - backend-media:/var/www/backend/media
      - ./backend:/backend
    links:
      - "database:database"
  database:
    image: postgres:9.6
#  Possible alternative, if need for postgis for example:
#    image: <dockerhub>/<project-database>
#    build:
#      context: ./database
#      dockerfile: Dockerfile.database
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=example
    ports:
      - "5432:5432"
  nginx:
#    image: <dockerhub>/<project-nginx-proxy>
#   Ports is just for local development
    ports:
      - "8808:80"
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    depends_on:
      - backend
      - frontend
    links:
      - backend
      - frontend
    volumes:
      - backend-static:/var/www/backend/static
      - backend-media:/var/www/backend/media
    environment:
      - VIRTUAL_HOST=localhost,127.0.0.1
volumes:
  backend-static: {}
  backend-media: {}
